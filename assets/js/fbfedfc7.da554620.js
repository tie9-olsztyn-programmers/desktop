"use strict";(self.webpackChunkdesktop=self.webpackChunkdesktop||[]).push([[6256],{3049:(i,n,e)=>{e.r(n),e.d(n,{assets:()=>s,contentTitle:()=>t,default:()=>w,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"Avalonia Intro/Wprowadzenie","title":"Wprowadzenie","description":"- wieloplatformowy framework do tworzenia aplikacji graficznych (GUI) w j\u0119zyku C#.","source":"@site/docs/1. Avalonia Intro/0. Wprowadzenie.mdx","sourceDirName":"1. Avalonia Intro","slug":"/Avalonia Intro/Wprowadzenie","permalink":"/desktop/docs/Avalonia Intro/Wprowadzenie","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/1. Avalonia Intro/0. Wprowadzenie.mdx","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"title":"Wprowadzenie"},"sidebar":"tutorialSidebar","previous":{"title":"Z\u0142o\u017cone typy danych","permalink":"/desktop/docs/CSharp Intro/Z\u0142o\u017cone typy danych"},"next":{"title":"StackPanel","permalink":"/desktop/docs/Avalonia Intro/Podstawowe kontrolki/StackPanel"}}');var o=e(4848),l=e(8453);const r={title:"Wprowadzenie"},t="Co to jest Avalonia?",s={},d=[{value:"tworzenie projektu Avalonia w Rider",id:"tworzenie-projektu-avalonia-w-rider",level:2},{value:"Tworzenie projektu Avalonia w konsolii",id:"tworzenie-projektu-avalonia-w-konsolii",level:2},{value:"Podstawowa struktura projektu",id:"podstawowa-struktura-projektu",level:2},{value:"Przep\u0142yw aplikacji:",id:"przep\u0142yw-aplikacji",level:2}];function c(i){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...i.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"co-to-jest-avalonia",children:"Co to jest Avalonia?"})}),"\n",(0,o.jsx)(n.admonition,{title:"Avalonia",type:"info",children:(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"wieloplatformowy framework do tworzenia aplikacji graficznych (GUI) w j\u0119zyku C#."}),"\n",(0,o.jsx)(n.li,{children:"inspirowany technologiami takimi jak WPF (Windows Presentation Foundation) i UWP (Universal Windows Platform),"}),"\n",(0,o.jsx)(n.li,{children:"dzia\u0142a na wielu systemach operacyjnych, w tym Windows, macOS, Linux, a tak\u017ce Android i iOS (chocia\u017c wsparcie mobilne jest mniej dojrza\u0142e)."}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://avaloniaui.net/",children:"https://avaloniaui.net/"})}),"\n"]})}),"\n",(0,o.jsx)(n.h1,{id:"\u015brodowisko",children:"\u015arodowisko"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Nale\u017cy zainstalowa\u0107 dotnet 8.0 lub dotnet 9.0."}),"\n",(0,o.jsxs)(n.li,{children:["Nast\u0119pnie instalujemy templates dla Avalonii ",(0,o.jsx)(n.code,{children:"dotnet new install Avalonia.Templates"})]}),"\n",(0,o.jsxs)(n.li,{children:["Instalujemy IDE Rider od JetBrains:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"warto utworzy\u0107 konto na JetBrains"}),"\n",(0,o.jsxs)(n.li,{children:["zainstaluj narz\u0119dzie do zarz\u0105dzania programami od JetBrains ",(0,o.jsx)(n.code,{children:"Toolbox"})]}),"\n",(0,o.jsxs)(n.li,{children:["przy u\u017cyciu ",(0,o.jsx)(n.code,{children:"Toolbox"})," zainstaluje Rider"]}),"\n",(0,o.jsxs)(n.li,{children:["w IDE Rider doinstaluj plugin ",(0,o.jsx)(n.code,{children:"AvaloniaRider"})," (",(0,o.jsx)(n.em,{children:"Settings > Plugin > AvaloniaRider"}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h1,{id:"tworzenie-projektu",children:"Tworzenie projektu"}),"\n",(0,o.jsx)(n.h2,{id:"tworzenie-projektu-avalonia-w-rider",children:"tworzenie projektu Avalonia w Rider"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"uruchom IDE Rider"}),"\n",(0,o.jsx)(n.li,{children:"wybierz new Solution"}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.em,{children:"Custom Templates"}),": wybierz ",(0,o.jsx)(n.code,{children:"Avalonia.Net App"})]}),"\n",(0,o.jsx)(n.li,{children:"dotnet 8 lub 9"}),"\n",(0,o.jsx)(n.li,{children:"nazwij swoj\u0105 aplikacj\u0119"}),"\n",(0,o.jsx)(n.li,{children:'uruchomienie przez klikni\u0119cie ikony "play"'}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"tworzenie-projektu-avalonia-w-konsolii",children:"Tworzenie projektu Avalonia w konsolii"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["jako podstawow\u0105 aplikacj\u0119 ",(0,o.jsx)(n.code,{children:"dotnet new avalonia.app -n <NazwaProjektu>"})]}),"\n",(0,o.jsxs)(n.li,{children:["jako zbudowan\u0105 na wzorcu MVVM ",(0,o.jsx)(n.code,{children:"dotnet new avalonia.mvvm -n N<azwaProjektu>"})]}),"\n",(0,o.jsxs)(n.li,{children:["uruchomienie projektu:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"cd NazwaProjektu"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"dotnet run"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"podstawowa-struktura-projektu",children:"Podstawowa struktura projektu"}),"\n",(0,o.jsx)(n.p,{children:"Podstawowa struktura\nMyApp.csproj: Plik projektu, kt\xf3ry zawiera informacje o konfiguracji projektu, takie jak zale\u017cno\u015bci NuGet, wersje framework\xf3w, itp.\nApp.axaml: Plik XAML definiuj\u0105cy zasoby aplikacji, takie jak style, szablony i inne zasoby globalne. Ten plik odpowiada za konfiguracj\u0119 aplikacji.\nApp.axaml.cs: Plik code-behind dla App.axaml. Zawiera logik\u0119 uruchamiania aplikacji, w tym inicjalizacj\u0119 i ustawienia startowe.\nMainWindow.axaml: G\u0142\xf3wny plik XAML definiuj\u0105cy interfejs u\u017cytkownika dla okna g\u0142\xf3wnego aplikacji. Zawiera elementy wizualne i layout.\nMainWindow.axaml.cs: Plik code-behind dla MainWindow.axaml, kt\xf3ry zawiera logik\u0119 i obs\u0142ug\u0119 zdarze\u0144 dla g\u0142\xf3wnego okna aplikacji.\nProgram.cs: Punkt wej\u015bcia aplikacji, gdzie znajduje si\u0119 metoda Main. W tym pliku uruchamiana jest aplikacja Avalonia.\nAssets/: Folder zawieraj\u0105cy zasoby, takie jak ikony, obrazy, czcionki, itp.\nViewModels/: Folder zawieraj\u0105cy modele widok\xf3w (ViewModels), kt\xf3re przechowuj\u0105 logik\u0119 biznesow\u0105 aplikacji i s\u0105 powi\u0105zane z widokami w architekturze MVVM. W tym przyk\u0142adzie MainWindowViewModel.cs przechowuje logik\u0119 dla g\u0142\xf3wnego okna.\nViews/: Folder zawieraj\u0105cy widoki (Views), kt\xf3re definiuj\u0105 interfejs u\u017cytkownika w postaci plik\xf3w XAML. Widoki s\u0105 powi\u0105zane z modelami widok\xf3w. MainWindow.axaml jest jednym z takich widok\xf3w."}),"\n",(0,o.jsx)(n.h2,{id:"przep\u0142yw-aplikacji",children:"Przep\u0142yw aplikacji:"}),"\n",(0,o.jsx)(n.p,{children:"Program.cs uruchamia aplikacj\u0119, tworz\u0105c instancj\u0119 klasy App\nApp.axaml.cs inicjalizuje zasoby i ustawia g\u0142\xf3wne okno aplikacji na MainWindow.\nMainWindow.axaml definiuje, jak wygl\u0105da g\u0142\xf3wne okno, a MainWindow.axaml.cs zawiera logik\u0119 zwi\u0105zan\u0105 z tym oknem.\nMainWindowViewModel.cs zarz\u0105dza danymi i logik\u0105 zwi\u0105zan\u0105 z widokiem MainWindow."}),"\n",(0,o.jsx)(n.h1,{id:"okno-g\u0142\xf3wne",children:"Okno g\u0142\xf3wne"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'Okno g\u0142\xf3wne axaml:\n<Window xmlns="https://github.com/avaloniaui"\n        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"\n        x:Class="FirstAval.MainWindow"\n        Title="FirstAval"\n        Width="800"\n        Height="600"\n        WindowStartupLocation="CenterScreen"\n        CanResize="True"\n        WindowState="Normal"\n        TransparencyLevelHint="AcrylicBlur"\n        ExtendClientAreaToDecorationsHint="False"\n        SystemDecorations="Full"\n        >\n    Ustawienia Okna\n\n</Window>\n'})})]})}function w(i={}){const{wrapper:n}={...(0,l.R)(),...i.components};return n?(0,o.jsx)(n,{...i,children:(0,o.jsx)(c,{...i})}):c(i)}},8453:(i,n,e)=>{e.d(n,{R:()=>r,x:()=>t});var a=e(6540);const o={},l=a.createContext(o);function r(i){const n=a.useContext(l);return a.useMemo((function(){return"function"==typeof i?i(n):{...n,...i}}),[n,i])}function t(i){let n;return n=i.disableParentContext?"function"==typeof i.components?i.components(o):i.components||o:r(i.components),a.createElement(l.Provider,{value:n},i.children)}}}]);